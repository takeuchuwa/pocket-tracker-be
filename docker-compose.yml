version: '3.8'
services:
  discovery-service:
    container_name: discovery
    build:
      context: .
      dockerfile: ./service-discovery/Dockerfile
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    depends_on:
      discovery-service:
        condition: service_healthy
    ports:
      - "80:80"

  users-db:
    container_name: users-db
    image: postgres
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: users_admin
      POSTGRES_PASSWORD: users_pass
      PGDATA: /data/users
    volumes:
      - postgres:/data/users
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  vault-server:
    container_name: vault-server
    image: hashicorp/vault:latest
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "e65e2ef0feac46bf9a4ae78cd236c81f"
    cap_add:
      - IPC_LOCK
    networks:
      vault-network:
        ipv4_address: 172.21.0.10
        aliases:
          - vault-server
      postgres:

  vault-client:
    container_name: vault-client
    build:
      context: .
      dockerfile: ./vault-initialize/Dockerfile
    environment:
      VAULT_ADDR: "http://vault-server:8200"
    depends_on:
      - vault-server
    restart: "no"
    networks:
      vault-network:
        ipv4_address: 172.21.0.20
        aliases:
          - vault-client

  jwt-rt-redis-db:
    container_name: jwt-rt-redis-db
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - jwt-rt-redis:/data
    restart: unless-stopped

networks:
  postgres:
    driver: bridge
  vault-network:
    ipam:
      config:
        - subnet: 172.21.0.0/24
volumes:
  postgres:
  pgadmin:
  jwt-rt-redis: